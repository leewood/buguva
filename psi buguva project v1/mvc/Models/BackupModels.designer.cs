#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="POA")]
	public partial class BackupModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public BackupModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["POAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BackupModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BackupModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BackupModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BackupModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BackupDepartment> BackupDepartments
		{
			get
			{
				return this.GetTable<BackupDepartment>();
			}
		}
		
		public System.Data.Linq.Table<BackupProject> BackupProjects
		{
			get
			{
				return this.GetTable<BackupProject>();
			}
		}
		
		public System.Data.Linq.Table<BackupTask> BackupTasks
		{
			get
			{
				return this.GetTable<BackupTask>();
			}
		}
		
		public System.Data.Linq.Table<BackupUser> BackupUsers
		{
			get
			{
				return this.GetTable<BackupUser>();
			}
		}
		
		public System.Data.Linq.Table<BackupWorker> BackupWorkers
		{
			get
			{
				return this.GetTable<BackupWorker>();
			}
		}
		
		public System.Data.Linq.Table<BackupWorkerStatus> BackupWorkerStatus
		{
			get
			{
				return this.GetTable<BackupWorkerStatus>();
			}
		}
	}
	
	[Table(Name="dbo.BackupDepartments")]
	public partial class BackupDepartment
	{
		
		private int _id;
		
		private System.Nullable<int> _headmaster_id;
		
		private System.Nullable<System.DateTime> _deleted;
		
		private System.Nullable<int> _deleted_by_id;
		
		private string _title;
		
		public BackupDepartment()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_headmaster_id", DbType="Int")]
		public System.Nullable<int> headmaster_id
		{
			get
			{
				return this._headmaster_id;
			}
			set
			{
				if ((this._headmaster_id != value))
				{
					this._headmaster_id = value;
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[Column(Storage="_deleted_by_id", DbType="Int")]
		public System.Nullable<int> deleted_by_id
		{
			get
			{
				return this._deleted_by_id;
			}
			set
			{
				if ((this._deleted_by_id != value))
				{
					this._deleted_by_id = value;
				}
			}
		}
		
		[Column(Storage="_title", DbType="VarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BackupProjects")]
	public partial class BackupProject
	{
		
		private int _id;
		
		private System.Nullable<int> _project_manager_id;
		
		private string _title;
		
		private System.Nullable<System.DateTime> _deleted;
		
		private System.Nullable<int> _deleted_by_id;
		
		public BackupProject()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_project_manager_id", DbType="Int")]
		public System.Nullable<int> project_manager_id
		{
			get
			{
				return this._project_manager_id;
			}
			set
			{
				if ((this._project_manager_id != value))
				{
					this._project_manager_id = value;
				}
			}
		}
		
		[Column(Storage="_title", DbType="VarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[Column(Storage="_deleted_by_id", DbType="Int")]
		public System.Nullable<int> deleted_by_id
		{
			get
			{
				return this._deleted_by_id;
			}
			set
			{
				if ((this._deleted_by_id != value))
				{
					this._deleted_by_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BackupTasks")]
	public partial class BackupTask
	{
		
		private int _id;
		
		private int _project_id;
		
		private int _project_participant_id;
		
		private int _year;
		
		private int _month;
		
		private int _worked_hours;
		
		private System.Nullable<System.DateTime> _deleted;
		
		private System.Nullable<int> _deleted_by_id;
		
		public BackupTask()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_project_id", DbType="Int NOT NULL")]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this._project_id = value;
				}
			}
		}
		
		[Column(Storage="_project_participant_id", DbType="Int NOT NULL")]
		public int project_participant_id
		{
			get
			{
				return this._project_participant_id;
			}
			set
			{
				if ((this._project_participant_id != value))
				{
					this._project_participant_id = value;
				}
			}
		}
		
		[Column(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this._year = value;
				}
			}
		}
		
		[Column(Storage="_month", DbType="Int NOT NULL")]
		public int month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this._month = value;
				}
			}
		}
		
		[Column(Storage="_worked_hours", DbType="Int NOT NULL")]
		public int worked_hours
		{
			get
			{
				return this._worked_hours;
			}
			set
			{
				if ((this._worked_hours != value))
				{
					this._worked_hours = value;
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[Column(Storage="_deleted_by_id", DbType="Int")]
		public System.Nullable<int> deleted_by_id
		{
			get
			{
				return this._deleted_by_id;
			}
			set
			{
				if ((this._deleted_by_id != value))
				{
					this._deleted_by_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BackupUsers")]
	public partial class BackupUser
	{
		
		private int _id;
		
		private string _login_name;
		
		private string _password;
		
		private int _level;
		
		private System.Nullable<int> _worker_id;
		
		private System.Nullable<System.DateTime> _deleted;
		
		private System.Nullable<int> _deleted_by_id;
		
		public BackupUser()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_login_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login_name
		{
			get
			{
				return this._login_name;
			}
			set
			{
				if ((this._login_name != value))
				{
					this._login_name = value;
				}
			}
		}
		
		[Column(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[Column(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this._level = value;
				}
			}
		}
		
		[Column(Storage="_worker_id", DbType="Int")]
		public System.Nullable<int> worker_id
		{
			get
			{
				return this._worker_id;
			}
			set
			{
				if ((this._worker_id != value))
				{
					this._worker_id = value;
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[Column(Storage="_deleted_by_id", DbType="Int")]
		public System.Nullable<int> deleted_by_id
		{
			get
			{
				return this._deleted_by_id;
			}
			set
			{
				if ((this._deleted_by_id != value))
				{
					this._deleted_by_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BackupWorkers")]
	public partial class BackupWorker
	{
		
		private int _id;
		
		private string _name;
		
		private string _surname;
		
		private System.Nullable<int> _department_id;
		
		private System.Nullable<System.DateTime> _deleted;
		
		private System.Nullable<int> _deleted_by_id;
		
		public BackupWorker()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this._surname = value;
				}
			}
		}
		
		[Column(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this._department_id = value;
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[Column(Storage="_deleted_by_id", DbType="Int")]
		public System.Nullable<int> deleted_by_id
		{
			get
			{
				return this._deleted_by_id;
			}
			set
			{
				if ((this._deleted_by_id != value))
				{
					this._deleted_by_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.BackupWorkerStatus")]
	public partial class BackupWorkerStatus
	{
		
		private int _id;
		
		private int _worker_id;
		
		private int _year;
		
		private int _month;
		
		private int _status;
		
		private System.Nullable<System.DateTime> _deleted;
		
		private System.Nullable<int> _deleted_by_id;
		
		public BackupWorkerStatus()
		{
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[Column(Storage="_worker_id", DbType="Int NOT NULL")]
		public int worker_id
		{
			get
			{
				return this._worker_id;
			}
			set
			{
				if ((this._worker_id != value))
				{
					this._worker_id = value;
				}
			}
		}
		
		[Column(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this._year = value;
				}
			}
		}
		
		[Column(Storage="_month", DbType="Int NOT NULL")]
		public int month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this._month = value;
				}
			}
		}
		
		[Column(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this._deleted = value;
				}
			}
		}
		
		[Column(Storage="_deleted_by_id", DbType="Int")]
		public System.Nullable<int> deleted_by_id
		{
			get
			{
				return this._deleted_by_id;
			}
			set
			{
				if ((this._deleted_by_id != value))
				{
					this._deleted_by_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
